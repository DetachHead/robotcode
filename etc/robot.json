{
  "$id": "robotframework:https://raw.githubusercontent.com/d-biehl/robotcode/main/etc/robot.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "DetachableConfiguration": {
      "additionalProperties": false,
      "properties": {
        "args": {
          "description": "Extra arguments to be passed to Robot Framework\n\nExamples:\n```toml\nargs = [\"-t\", \"abc\"]\n```\n",
          "items": {
            "type": "string"
          },
          "title": "Args",
          "type": "array"
        },
        "console": {
          "title": "Console",
          "type": "string"
        },
        "debug-file": {
          "title": "Debug-File",
          "type": "string"
        },
        "detached": {
          "default": false,
          "title": "Detached",
          "type": "boolean"
        },
        "doc": {
          "description": "Set the documentation of the top level suite.\nSimple formatting is supported (e.g. *bold*). If the\ndocumentation contains spaces, it must be quoted.\nIf the value is path to an existing file, actual\ndocumentation is read from that file.\n\nExamples:\n```toml\ndoc = \"\"\"Very *good* example\n\nThis is a second paragraph.\n\"\"\"\n```\n",
          "title": "Doc",
          "type": "string"
        },
        "dry-run": {
          "title": "Dry-Run",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set variables in the test data. Only scalar\nvariables with string value are supported and name is\ngiven without `${}`\n\nExamples:\n```toml\n[env]\nTEST_VAR = \"test\"\nSECRET = \"password\"\n```\n",
          "title": "Env",
          "type": "object"
        },
        "languages": {
          "items": {
            "type": "string"
          },
          "title": "Languages",
          "type": "array"
        },
        "listeners": {
          "additionalProperties": {
            "items": {},
            "type": "array"
          },
          "title": "Listeners",
          "type": "object"
        },
        "log-file": {
          "title": "Log-File",
          "type": "string"
        },
        "log-level": {
          "title": "Log-Level",
          "type": "string"
        },
        "meta-data": {
          "items": {
            "type": "string"
          },
          "title": "Meta-Data",
          "type": "array"
        },
        "mode": {
          "$ref": "#/definitions/Mode"
        },
        "output-dir": {
          "title": "Output-Dir",
          "type": "string"
        },
        "output-file": {
          "title": "Output-File",
          "type": "string"
        },
        "parsers": {
          "additionalProperties": {
            "items": {},
            "type": "array"
          },
          "title": "Parsers",
          "type": "object"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "title": "Paths",
          "type": "array"
        },
        "pre-rebot-modifiers": {
          "additionalProperties": {
            "items": {},
            "type": "array"
          },
          "title": "Pre-Rebot-Modifiers",
          "type": "object"
        },
        "pre-run-modifiers": {
          "additionalProperties": {
            "items": {},
            "type": "array"
          },
          "title": "Pre-Run-Modifiers",
          "type": "object"
        },
        "python-path": {
          "description": "Additional locations directories where\nto search test libraries and other extensions when\nthey are imported. Given path can also be a glob\npattern matching multiple paths.\n\nExamples:\n```toml\npython_path = [\"./lib\", \"./resources\"]\n```\n",
          "items": {
            "type": "string"
          },
          "title": "Python-Path",
          "type": "array"
        },
        "variable-files": {
          "items": {
            "type": "string"
          },
          "title": "Variable-Files",
          "type": "array"
        },
        "variables": {
          "description": "Set variables in the test data. Only scalar\nvariables with string value are supported and name is\ngiven without `${}`\n\nExamples:\n```toml\n[variables]\nTEST_VAR = \"test\"\nSECRET = \"password\"\n```\n",
          "title": "Variables",
          "type": "object"
        }
      },
      "title": "robot.toml",
      "type": "object"
    },
    "Mode": {
      "description": "Run mode for Robot Framework.",
      "enum": [
        "default",
        "rpa",
        "norpa"
      ],
      "title": "Mode"
    }
  },
  "description": "Configuration for Robot Framework.",
  "properties": {
    "args": {
      "description": "Extra arguments to be passed to Robot Framework\n\nExamples:\n```toml\nargs = [\"-t\", \"abc\"]\n```\n",
      "items": {
        "type": "string"
      },
      "title": "Args",
      "type": "array"
    },
    "console": {
      "title": "Console",
      "type": "string"
    },
    "debug-file": {
      "title": "Debug-File",
      "type": "string"
    },
    "doc": {
      "description": "Set the documentation of the top level suite.\nSimple formatting is supported (e.g. *bold*). If the\ndocumentation contains spaces, it must be quoted.\nIf the value is path to an existing file, actual\ndocumentation is read from that file.\n\nExamples:\n```toml\ndoc = \"\"\"Very *good* example\n\nThis is a second paragraph.\n\"\"\"\n```\n",
      "title": "Doc",
      "type": "string"
    },
    "dry-run": {
      "title": "Dry-Run",
      "type": "boolean"
    },
    "env": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Set variables in the test data. Only scalar\nvariables with string value are supported and name is\ngiven without `${}`\n\nExamples:\n```toml\n[env]\nTEST_VAR = \"test\"\nSECRET = \"password\"\n```\n",
      "title": "Env",
      "type": "object"
    },
    "languages": {
      "items": {
        "type": "string"
      },
      "title": "Languages",
      "type": "array"
    },
    "listeners": {
      "additionalProperties": {
        "items": {},
        "type": "array"
      },
      "title": "Listeners",
      "type": "object"
    },
    "log-file": {
      "title": "Log-File",
      "type": "string"
    },
    "log-level": {
      "title": "Log-Level",
      "type": "string"
    },
    "meta-data": {
      "items": {
        "type": "string"
      },
      "title": "Meta-Data",
      "type": "array"
    },
    "mode": {
      "$ref": "#/definitions/Mode"
    },
    "output-dir": {
      "title": "Output-Dir",
      "type": "string"
    },
    "output-file": {
      "title": "Output-File",
      "type": "string"
    },
    "parsers": {
      "additionalProperties": {
        "items": {},
        "type": "array"
      },
      "title": "Parsers",
      "type": "object"
    },
    "paths": {
      "items": {
        "type": "string"
      },
      "title": "Paths",
      "type": "array"
    },
    "pre-rebot-modifiers": {
      "additionalProperties": {
        "items": {},
        "type": "array"
      },
      "title": "Pre-Rebot-Modifiers",
      "type": "object"
    },
    "pre-run-modifiers": {
      "additionalProperties": {
        "items": {},
        "type": "array"
      },
      "title": "Pre-Run-Modifiers",
      "type": "object"
    },
    "profiles": {
      "additionalProperties": {
        "$ref": "#/definitions/DetachableConfiguration"
      },
      "description": "Execution Profiles.",
      "title": "Profiles",
      "type": "object"
    },
    "python-path": {
      "description": "Additional locations directories where\nto search test libraries and other extensions when\nthey are imported. Given path can also be a glob\npattern matching multiple paths.\n\nExamples:\n```toml\npython_path = [\"./lib\", \"./resources\"]\n```\n",
      "items": {
        "type": "string"
      },
      "title": "Python-Path",
      "type": "array"
    },
    "variable-files": {
      "items": {
        "type": "string"
      },
      "title": "Variable-Files",
      "type": "array"
    },
    "variables": {
      "description": "Set variables in the test data. Only scalar\nvariables with string value are supported and name is\ngiven without `${}`\n\nExamples:\n```toml\n[variables]\nTEST_VAR = \"test\"\nSECRET = \"password\"\n```\n",
      "title": "Variables",
      "type": "object"
    }
  },
  "title": "robot.toml",
  "type": "object",
  "x-taplo-info": {
    "authors": [
      "d-biehl (https://github.com/d-biehl)"
    ],
    "patterns": [
      "^(.*(/|\\\\)robot\\.toml|robot\\.toml)$"
    ]
  }
}
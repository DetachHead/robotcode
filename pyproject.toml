[build-system]
requires = ["hatchling>=1.12.2", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "robotcode"
description = "Language server, debugger and tools for Robot Framework"
authors = [{ name = "Daniel Biehl", email = "dbiehlo@live.de" }]
readme = "README.md"
license = "Apache-2.0"
keywords = [
  "Test",
  "Testing",
  "RobotFramework",
  "Keyword Driven",
  "Data Driven",
  "Acceptance Testing",
  "Acceptance Test Driven Development",
  "BDD",
  "Behavior Driven Testing",
  "BDT",
  "Robotic Process Automation",
  "RPA",
  "Language Server Protocol",
  "Debug Adapter Protocol",
  "Visual Studio Code",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: Apache Software License",
  "Framework :: Robot Framework",
  "Framework :: Robot Framework :: Tool",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Testing :: Acceptance",
  "Topic :: Software Development :: Testing :: BDD",
  "Typing :: Typed",
  "Topic :: Software Development :: Debuggers",
  "Topic :: Text Editors :: Integrated Development Environments (IDE)",
]
requires-python = ">=3.8"
dependencies = ["robotframework>=4.1.0"]
dynamic = ["version"]

[project.urls]
Donate = "https://github.com/sponsors/d-biehl"
Documentation = "https://github.com/d-biehl/robotcode#readme"
Changelog = "https://github.com/d-biehl/robotcode/blob/main/CHANGELOG.md"
Issues = "https://github.com/d-biehl/robotcode/issues"
Source = "https://github.com/d-biehl/robotcode"

[project.optional-dependencies]
yaml = ["PyYAML>=5.4", "types-PyYAML>=5.4"]
lint = ["robotframework-robocop>=2.0.0"]
tidy = ["robotframework-tidy>=2.0.0"]
rest = ["docutils", "types-docutils"]

[project.scripts]
'robotcode.debugger' = 'robotcode.debugger.__main__:main'
'robotcode.language_server' = 'robotcode.language_server.__main__:main'

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "robotcode/__version__.py"
template = '''
__version__ = "{version}"
'''
[tool.hatch.build.targets.sdist]
only-include = ["robotcode", "CHANGELOG.md"]


[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-html",
  "pytest_asyncio",
  "pytest-regtest>=1.5.0",
  "pytest-cov",
  "isort",
  "mypy",
  "flake8",
  "black",
  "pep8-naming",
  "debugpy",
  "GitPython",
  "semantic-version",
  "pre-commit",
  "python-semantic-release",
  "robotremoteserver",
  "PyYAML>=5.4",
  "types-PyYAML>=5.4",
  "robotframework-robocop>=2.0.0",
  "robotframework-tidy>=2.0.0",
  "docutils",
  "types-docutils",
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=hatchtester --cov=tests {args}"
no-cov = "cov --no-cov {args}"
test = "pytest {args}"

[tool.hatch.envs.devel]
python = "38"

[[tool.hatch.envs.devel.matrix]]
python = ["38", "311"]
rf = ["rf41", "rf50", "rf60"]


[tool.hatch.envs.devel.overrides]
matrix.rf.dependencies = [
  { value = "robotframework>=4.1.0, <5.0", if = [
    "rf41",
  ] },
  { value = "robotframework>=5.0.0, <6.0", if = [
    "rf50",
  ] },
  { value = "robotframework>6.0.0, <6.1", if = [
    "rf60",
  ] },
]


[tool.semantic_release]
version_variable = ["robotcode/__version__.py:__version__"]
version_pattern = ['package.json:"version": "{version}"']
branch = "main"
upload_to_pypi = false
upload_to_release = false
build_command = "pip install hatch && hatch build"

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.hatch
    | build
    | dist
    | out
    | playground
  )/
)
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -vv"
filterwarnings = "ignore:.*Using or importing the ABCs from 'collections' instead of from 'collections.abc'.*:DeprecationWarning"
testpaths = ["tests"]
junit_suite_name = "robotcode"
# log_cli = true
# log_cli_level = 4
# log_cli_format = "%(levelname)s %(name)s: %(message)s"
asyncio_mode = "auto"

[tool.isort]
profile = "black"
src_paths = ["robotcode", "tests"]
skip_gitignore = true
skip = ['external', '.venv', ".hatch"]

[tool.coverage.run]
omit = ["*tests*"]
source = ["robotcode"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
]
fail_under = 40

[tool.mypy]
# MyPy config
# File reference here - http://mypy.readthedocs.io/en/latest/config_file.html#config-file
python_version = 3.8
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true
strict = true
disallow_subclassing_any = false
#ignore_missing_imports = true
exclude = [
  "\\.mypy_cache",
  "\\.venv",
  "\\.hatch",
  "build",
  "dist",
  "out",
  "playground",
  "scripts",
]

[[tool.mypy.overrides]]
module = [
  "robot.*",
  "robotremoteserver.*",
  "debugpy.*",
  "robotidy.*",
  "robocop.*",
  "pytest_regtest.*",
]
ignore_missing_imports = true
